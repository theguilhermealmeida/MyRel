openapi: 3.0.0
info:
  version: '1.0'
  title: Lbaw Project - MyRel
  description: Web Resources Specification (A7) for Lbaw Project

servers:
  - url: http://lbaw2212.lbaw.fe.up.pt
Â   description: Production server
    
externalDocs:
  description: "Get more information here."
  url: https://git.fe.up.pt/lbaw/lbaw2223/lbaw2212

tags:
  - name: "M01: Authentication"
  - name: "M02: User"
  - name: "M03: User Notifications"
  - name: "M04: Posts"
  - name: "M05: Comments"
  - name: "M06: Replies"
  - name: "M07: Reactions"
  - name: "M08: Help"
  - name: "M09: Search"
  - name: "M10: Administration"
paths:
  /login:
    get:
      operationId: R101
      summary: "R101: Login Form"
      description: "Provide login form(UI12). Access: PUB"
      tags:
        - "M01: Authentication"
      responses:
        "200":
          description: "Return login page."
    post:
      operationId: R102
      summary: "R102: Login Action"
      description: "Processes the login form data. Access: PUB"
      tags:
        - "M01: Authentication"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                  format: password
              required:
                - email
                - password
      responses:
        "302":
          description: "Redirect after processing the login credentials."
          headers:
            location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Login succeed. Will redirect to user feed."
                  value: "/posts"
        "401":
          description: "Redirect after processing the login credentials."
          headers:
            location:
              schema:
                type: string
              examples:
                401Error:
                  description: "Unauthorized. Response will be processed in the login page to alert the user about the failure."
                  value: "/login"
  /logout:
    post:
      operationId: R103
      summary: "R103: Logout"
      description: "Logout the current authenticated user. Access: USR, ADM"
      tags:
        - "M01: Authentication"
      responses:
        "302":
          description: "Redict after processing logout"
          headers:
            location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Logout successful. Redirecting to home page"
                  value: "/posts"
                302Fail:
                  description: "Logout not successful. Redirecting to home page"
                  value: "${previousPageUrl}"
  /register:
    get:
      operationId: R104
      summary: "R104: Register Form"
      description: "Provide a new user registration form(UI13). Access: PUB"
      tags:
        - "M01: Authentication"
      responses:
        "200":
          description: "Show Register Page to User. Access: PUB"

    post:
      operationId: R105
      summary: "R105: Register new user"
      description: "Processes the form information to register new user. Access: PUB"
      tags:
        - "M01: Authentication"

      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                gender:
                  type: string
                password:
                  type: string
                  format: password
                description:
                  type: string
              required:
                - name
                - email
                - gender
                - password
                - description

      responses:
        "302":
          description: "Redirect after processing new user information"
          headers:
            location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Sucessful registration. Redirecting to home page"
                  value: "/posts"
                302Error:
                  description: "Failed registration. Redirecting back to register form"
                  value: "/register"

  /user/{id}:
    get:
      operationId: R201
      summary: "R201: User Profile"
      description: "Show user profile(UI6). Access: PUB"
      tags:
        - "M02: User"
      parameters:
        - name: id
          in: path
          description: "User ID"
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: "Show user profile page. Access: PUB"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    email:
                      type: string
                    date:
                      type: string
                      format: date-time
                    gender:
                      type: string
                    description:
                      type: string
                    photo:
                      type: string
                      format: binary
                    ban:
                      type: string
    
  /api/user/{id}:
    post:
      operationId: R202
      summary: "R202: Edit User Profile"
      description: "Edit user profile. Access: USR, ADM"
      tags:
        - "M02: User"
      parameters:
        - name: id
          in: path
          description: "User ID"
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                gender:
                  type: string
                password:
                  type: string
                  format: password
                description:
                  type: string
                photo:
                  type: string
                  format: binary
      responses:
        "302":
          description: "Redirect after editing the user profile."
          headers:
            location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Sucessful edit user. Redirecting to user page"
                  value: "/user/{id}"
                302Error:
                  description: "Failed edit user. Redirecting back to user page"
                  value: "/user/{id}"
    delete:
      operationId: R203
      summary: "R203: Delete User Profile"
      description: "Delete user profile. Access: USR,ADM"
      tags:
        - "M02: User"
      parameters:
        - name: id
          in: path
          description: "User ID"
          required: true
          schema:
            type: integer
      responses:
        "302":
          description: "Redirect after processing user deletion"
          headers:
            Location:
              schema:
                type: string
              examples: 
                302Success:
                  description: "Sucessful deletion. Redirecting to home page"
                  value: "/"
                302Error:
                  description: "Failed deletion. Redirecting back to user profile"
                  value: "/user/{id}"
  


  /notifications: # use get notification to get all notifications as JSON
    get:
      operationId: R301
      summary: "R301: Get Notifications"
      description: "Get all notifications(UI9). Access: USR, ADM"
      tags:
        - "M03: User Notifications"
      responses:
        "200":
          description: "Show all notifications. Access: USR, ADM"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    related_id :
                      type: integer
                    type:
                      type: string
                    date:
                      type: string
                      format: date-time
                    read:
                      type: boolean
                    text :
                      type: string

  /api/notifications/{id}: # update the notification to set it as read
    post:
      operationId: R302
      summary: "R302: Update Notification"
      description: "Update notification to set it as read. Access: USR, ADM"
      tags:
        - "M03: User Notifications"
      parameters:
        - name: id
          in: path
          description: "Notification ID"
          required: true
          schema:
            type: integer
        - name: read
          in: query
          description: "If notification was read"
          required: true
          schema:
            type: boolean
      responses:
        "302":
          description: "Redirect after editing notification."
          headers:
            location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Sucessful edit notification. Redirecting to notifications"
                  value: "/notifications"
                302Error:
                  description: "Failed edit notification. Redirecting back to notifications"
                  value: "/notifications"

  /posts:
    get:
      operationId: R401
      summary: "R401: Get Posts"
      description: "Get the feed(UI2). Access: PUB"
      tags:
        - "M04: Posts"
      responses:
        "200":
          description: "Show the posts that you have permission. Access: PUB"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    user_id:
                      type: integer
                    text:
                      type: string
                    date:
                      type: string
                      format: date-time
                    photo:
                      type: string
                      format: binary
                    visibility :
                      type: string

  /api/posts:
    put:
      operationId: R402
      summary: "R402: Create a Post"
      description: "Create a new post. Access: USR, ADM"
      tags:
        - "M04: Posts"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                text:
                  type: string
                visibility:
                  type: string
                photo:
                  type: string
                  format: binary
              required:
                - text
                - visibility
      responses:
        "302":
          description: "Redirect after creating new post."
          headers:
            location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Successful create post. Redirecting to post page"
                  value: "/post/{id}"
                302Error:
                  description: "Unsuccessful create post. Redirecting back to posts page"
                  value: "/posts"

  /posts/{id}:
    get:
      operationId: R403
      summary: "R403: Get Post"
      description: "Get a specific post(UI2). Access: PUB"
      tags:
        - "M04: Posts"
      parameters:
        - name: id
          in: path
          description: "Post ID"
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: "Show a post. Access: PUB"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    user_id:
                      type: integer
                    text:
                      type: string
                    date:
                      type: string
                      format: date-time
                    photo:
                      type: string
                      format: binary
                    visibility :
                      type: string
    
  /api/posts/{id}:
    post:
      operationId: R404
      summary: "R404: Update Post"
      description: "Update a post. Access: PTO, ADM"
      tags:
        - "M04: Posts"
      parameters:
        - name: id
          in: path
          description: "Post ID"
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                text:
                  type: string
                visibility:
                  type: string
                photo:
                  type: string
                  format: binary
              required:
                - text
                - visibility
      responses:
        "302":
          description: "Redirect after editing the post."
          headers:
            location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Sucessful edit post. Redirecting to post page"
                  value: "/posts/{id}"
                302Error:
                  description: "Unsucessful edit post. Redirecting to post page"
                  value: "/posts/{id}"

    delete:
      operationId: R405
      summary: "R405: Delete Post"
      description: "Delete a post. Access: PTO, ADM"
      tags:
        - "M04: Posts"
      parameters:
        - name: id
          in: path
          description: "Post ID"
          required: true
          schema:
            type: integer
      responses:
        "302":
          description: "Redirect after processing post deletion"
          headers:
            location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Sucessful deletion. Redirecting to home page"
                  value: "/posts"
                302Error:
                  description: "Failed deletion. Redirecting back to post"
                  value: "/posts/{id}"

  /api/comments:
    put:
      operationId: R501
      summary: "R501: Create Comment"
      description: "Create a new comment. Access: USR, ADM"
      tags:
        - "M05: Comments"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: integer
                user:
                  type: integer
                post:
                  type: integer
                text:
                  type: string
                date: 
                  type: string
                  format: date-time
              required:
                - user
                - text
                - post
      responses:
        "302":
          description: "Redirect after creating new comment."
          headers:
            location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Sucessful create comment. Redirecting to post page"
                  value: "/posts/{id}"
                302Error:
                  description: "Failed create comment. Redirecting back to post page"
                  value: "/posts/{id}"
                
  /api/comments/{id}:
    post:
      operationId: R502
      summary: "R502: Update Comment"
      description: "Update a comment. Access: CMO, ADM"
      tags:
        - "M05: Comments"
      parameters:
        - name: id
          in: path
          description: "Comment ID"
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                text:
                  type: string
              required:
                - text
      responses:
        "302":
          description: "Redirect after editing a comment."
          headers:
            location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Sucessful edit comment. Redirecting to post page"
                  value: "/posts/{id}"
                302Error:
                  description: "Failed edit comment. Redirecting back to post page"
                  value: "/posts/{id}"
    delete:
      operationId: R503
      summary: "R503: Delete Comment"
      description: "Delete a comment. Access: CMO, ADM"
      tags:
        - "M05: Comments"
      parameters:
        - name: id
          in: path
          description: "Comment ID"
          required: true
          schema:
            type: integer
      responses:
        "302":
          description: "Redirect after deleting a comment."
          headers:
            location:
              schema:
                type: string
              examples: 
                302Success:
                  description: "Sucessful deletion. Redirecting to post page"
                  value: "/posts/{id}"
                302Error:
                  description: "Failed deletion. Redirecting back to post page"
                  value: "/posts/{id}"

  /api/replies:
    put:
      operationId: R601
      summary: "R601: Create Reply"
      description: "Create a new reply. Access: USR, ADM"
      tags:
        - "M06: Replies"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: integer
                user:
                  type: integer
                comment:
                  type: integer
                text:
                  type: string
                date: 
                  type: string
                  format: date-time
              required:
                - user
                - text
                - comment
      responses:
        "302":
          description: "Redirect after creating a new reply."
          headers:
            location:
              schema:
                type: string
              examples: 
                302Success:
                  description: "Sucessful create reply. Redirecting to post page"
                  value: "/posts/{id}"
                302Error:
                  description: "Failed create reply. Redirecting back to post"
                  value: "/posts/{id}"
  
  /api/replies/{id}:
    post:
      operationId: R602
      summary: "R602: Update Reply"
      description: "Update a reply. Access: RPO, ADM"
      tags:
        - "M06: Replies"
      parameters:
        - name: id
          in: path
          description: "Reply ID"
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                text:
                  type: string
              required:
                - text
      responses:
        "302":
          description: "Redirect after updating a reply."
          headers:
            location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Sucessful update reply. Redirecting to post page"
                  value: "/posts/{id}"
                302Error:
                  description: "Failed update reply. Redirecting back to post"
                  value: "/posts/{id}"

    delete:
      operationId: R603
      summary: "R603: Delete Reply"
      description: "Delete a reply. Access: RPO, ADM"
      tags:
        - "M06: Replies"
      parameters:
        - name: id
          in: path
          description: "Reply ID"
          required: true
          schema:
            type: integer
      responses:
        "302":
          description: "Redirect after deleting a reply."
          headers:
            location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Sucessful delete reply. Redirecting to post page"
                  value: "/posts/{id}"
                302Error:
                  description: "Failed delete reply. Redirecting back to post"
                  value: "/posts/{id}"

  /api/postreactions:
    put:
      operationId: R701
      summary: "R701: Create a PostReaction"
      description: "Create a new postreaction. Access: USR, ADM"
      tags:
        - "M07: Reactions"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: integer
                user:
                  type: integer
                post:
                  type: integer
                reaction:
                  type: string
              required:
                - reaction
                - post
                - user
      responses:
        "302":
          description: "Redirect after creating a new reaction."
          headers:
            location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Sucessful create reaction. Redirecting to previous page"
                  value: "${previousPageUrl}"
                302Error:
                  description: "Failed create reaction. Redirecting to previous page"
                  value: "${previousPageUrl}"             

  /api/postreactions/{id}:
    delete:
      operationId: R702
      summary: "R702: Delete PostReaction"
      description: "Delete a postreaction. Access: RCO, ADM"
      tags:
        - "M07: Reactions"
      responses:
        "302":
          description: "Redirect after deleting a reaction."
          headers:
            location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Sucessful delete reaction. Redirecting to previous page"
                  value: "${previousPageUrl}"
                302Error:
                  description: "Failed delete reaction. Redirecting to previous page"
                  value: "${previousPageUrl}" 

  /api/commentreactions:
    put:
      operationId: R703
      summary: "R703: Create a CommentReaction"
      description: "Create a new commentreaction. Access: USR, ADM"
      tags:
        - "M07: Reactions"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: integer
                user:
                  type: integer
                comment:
                  type: integer
                reaction:
                  type: string
              required:
                - reaction
                - comment
                - user
      responses:
        "302":
          description: "Redirect after creating a new reaction."
          headers:
            location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Sucessful create reaction. Redirecting to previous page"
                  value: "${previousPageUrl}"
                302Error:
                  description: "Failed create reaction. Redirecting to previous page"
                  value: "${previousPageUrl}" 

  /api/commentreactions/{id}:
    delete:
      operationId: R704
      summary: "R704: Delete CommentReaction"
      description: "Delete a commentreaction. Access: RCO, ADM"
      tags:
        - "M07: Reactions"
      responses:
        "302":
          description: "Redirect after deleting a reaction."
          headers:
            location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Sucessful delete reaction. Redirecting to previous page"
                  value: "${previousPageUrl}"
                302Error:
                  description: "Failed delete reaction. Redirecting to previous page"
                  value: "${previousPageUrl}" 
  
  /api/replyreactions:
    put:
      operationId: R705
      summary: "R705: Create a ReplyReaction"
      description: "Create a new replyreaction. Access: USR, ADM"
      tags:
        - "M07: Reactions"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: integer
                user:
                  type: integer
                reply:
                  type: integer
                reaction:
                  type: string
              required:
                - reaction
                - reply
                - user
      responses:
        "302":
          description: "Redirect after creating a new reaction."
          headers:
            location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Sucessful create reaction. Redirecting to previous page"
                  value: "${previousPageUrl}"
                302Error:
                  description: "Failed create reaction. Redirecting to previous page"
                  value: "${previousPageUrl}" 

  /api/replyreactions/{id}:
    delete:
      operationId: R706
      summary: "R706: Delete ReplyReaction"
      description: "Delete a replyreaction. Access: RCO, ADM"
      tags:
        - "M07: Reactions"
      responses:
        "302":
          description: "Redirect after deleting a reaction."
          headers:
            location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Sucessful delete reaction. Redirecting to previous page"
                  value: "${previousPageUrl}"
                302Error:
                  description: "Failed delete reaction. Redirecting to previous page"
                  value: "${previousPageUrl}" 

  /aboutus:
    get:
      operationId: R801
      summary: "R801: About Us"
      description: "Provide about us page(UI11). Access: PUB"
      tags:
        - "M08: Help"
      responses:
        "200":
          description: "Return about us page."
        
  /contacts:
    get:
      operationId: R802
      summary: "R802: Contacts"
      description: "Provide contacts page(UI10). Access: PUB"
      tags:
        - "M08: Help"
      responses:
        "200":
          description: "Return contacts page."

  /search: # search for a user and return a array with found users
    get:
      operationId: R901
      summary: "R901: Search"
      description: "Search for a user, a post or a comment(UI8). Access: PUB"
      tags:
        - "M09: Search"
      parameters:
        - name: search
          in: query
          description: "Search string"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Return search results. Access: PUB"

  /admin:
    get:
      operationId: R1001
      summary: "R1001: Admin page"
      description: "Get the administration page(UI14,UI15,UI16,UI17). Access: ADM"
      tags:
        - "M10: Administration"
      responses:
        "200":
          description: "Return admin control page. Access: ADM"
                  
